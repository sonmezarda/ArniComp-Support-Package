{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "quick-compile-smoke",
			"type": "shell",
			"command": "python",
			"args": [
				"- << 'PY'\nfrom compiler.modules.CompilerHelper import create_default_compiler\nfrom compiler.modules.Commands import AssignCommand, VarDefCommandWithoutValue\nfrom compiler.modules.VariableManager import VarTypes\n\nc = create_default_compiler()\n# define scalar\nc.set_grouped_lines([\n    VarDefCommandWithoutValue('byte x;'),\n])\nc.compile_lines()\n# assign scalar\nc.set_grouped_lines([\n    AssignCommand('x = 5'),\n])\nc.compile_lines()\n# define array\nc.set_grouped_lines([\n    VarDefCommandWithoutValue('byte[3] arr;'),\n])\nc.compile_lines()\n# assign array element\nc.set_grouped_lines([\n    AssignCommand('arr[1] = 7'),\n])\nc.compile_lines()\nprint('\\n'.join(c.get_assembly_lines()))\nPY"
			]
		},
		{
			"label": "quick-compile-smoke-2",
			"type": "shell",
			"command": "python",
			"args": [
				"- << 'PY'\nfrom compiler.modules.CompilerHelper import create_default_compiler\nfrom compiler.modules.Commands import AssignCommand, VarDefCommandWithoutValue\n\nc = create_default_compiler()\n# define scalar\nc.set_grouped_lines([\n    VarDefCommandWithoutValue('byte x;'),\n])\nc.compile_lines()\n# assign scalar\nc.set_grouped_lines([\n    AssignCommand('x = 5'),\n])\nc.compile_lines()\n# define array\nc.set_grouped_lines([\n    VarDefCommandWithoutValue('byte[3] arr;'),\n])\nc.compile_lines()\n# assign array element\nc.set_grouped_lines([\n    AssignCommand('arr[1] = 7'),\n])\nc.compile_lines()\nprint('\\n'.join(c.get_assembly_lines()))\nPY"
			]
		}
	]
}