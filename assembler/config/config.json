{
    "special_chars":{
        "comment":";",
        "label":":"
    },
    "keywords":{
        "constant": "equ"
    },
    "destinations":{
        "RA":"000",
        "RD":"001",
        "RB":"010",
        "MARL":"011",
        "MARH":"100",
        "PRL":"101",
        "PRH":"110",
        "M":"111"
    },
    "sources":{
        "RA":"000",
        "RD":"001",
        "RB":"010",
        "ACC":"011",
        "PCL":"100",
        "PCH":"101",
        "M":"110"
    },
    "instructions" : {
        "LDI" : {
            "description": "Load immediate to RA",
            "format": "LDI #imm7",
            "encoding": "IM7=1, immediate=7bits"
        },
        "MOV" : {
            "description": "Move from source to destination",
            "format": "MOV dest, src",
            "encoding": "IM7=0, MV=1, A1A2=dest(3bits), J=src(3bits), rest=0",
            "forbidden": ["RA,RA", "RD,RD", "RB,RB", "M,M"]
        },
        "NOT" : {
            "description": "Bitwise NOT",
            "format": "NOT src",
            "encoding": "IM7=0, MV=1, varies by source",
            "allowed_sources": ["RA", "RB", "ACC", "RD", "M"]
        },
        "ADD" : {
            "description": "Add source to RD, result to ACC",
            "format": "ADD src",
            "encoding": "IM7=0, MV=0, A1A2=00, J=src, S2S1=S0"
        },
        "XOR" : {
            "description": "XOR operation",
            "format": "XOR src",
            "encoding": "IM7=0, MV=0, varies by source",
            "allowed_sources": ["RA", "RB", "RD", "ACC", "M"]
        },
        "SUB" : {
            "description": "Subtract (with carry) source from RD",
            "format": "SUB src",
            "encoding": "IM7=0, MV=0, A1A2=01, J=src, S2S1=S0"
        },
        "ADC" : {
            "description": "Add with carry",
            "format": "ADC src",
            "encoding": "IM7=0, MV=0, A1A2=01, J=src, S2S1=S0"
        },
        "SBC" : {
            "description": "Subtract with carry",
            "format": "SBC src",
            "encoding": "IM7=0, MV=0, A1A2=01, J=src, S2S1=S0"
        },
        "AND" : {
            "description": "Bitwise AND",
            "format": "AND src",
            "encoding": "IM7=0, MV=0, A1A2=10, J=src, S2S1=S0"
        },
        "JMP" : {
            "description": "Unconditional jump",
            "format": "JMP",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=JS2JS1JS0(000)"
        },
        "JEQ" : {
            "description": "Jump if equal",
            "format": "JEQ",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=001"
        },
        "JGT" : {
            "description": "Jump if greater than",
            "format": "JGT",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=010"
        },
        "JLT" : {
            "description": "Jump if less than",
            "format": "JLT",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=011"
        },
        "JGE" : {
            "description": "Jump if greater or equal",
            "format": "JGE",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=100"
        },
        "JLE" : {
            "description": "Jump if less or equal",
            "format": "JLE",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=101"
        },
        "JNE" : {
            "description": "Jump if not equal",
            "format": "JNE",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=110"
        },
        "JC" : {
            "description": "Jump if carry",
            "format": "JC",
            "encoding": "IM7=0, MV=0, A1=1, A2J=000, S2S1S0=111"
        },
        "ADDI" : {
            "description": "Add immediate (3-bit)",
            "format": "ADDI #imm3",
            "encoding": "IM7=0, MV=0, A1A2=11, J=0, IM2IM1IM0=imm3"
        },
        "SUBI" : {
            "description": "Subtract immediate (3-bit)",
            "format": "SUBI #imm3",
            "encoding": "IM7=0, MV=0, A1A2=11, J=1, IM2IM1IM0=imm3"
        },
        "NOP" : {
            "description": "No operation",
            "format": "NOP",
            "encoding": "00000000"
        },
        "HLT" : {
            "description": "Halt",
            "format": "HLT",
            "encoding": "00000001"
        },
        "SMSBRA" : {
            "description": "Set MSB of RA to 1",
            "format": "SMSBRA",
            "encoding": "00000010"
        },
        "INX" : {
            "description": "Increment MARL",
            "format": "INX",
            "encoding": "00000011"
        },
        "CMP" : {
            "description": "Compare (RA, M, or ACC with RD)",
            "format": "CMP src",
            "encoding": "varies by source",
            "allowed_sources": ["RA", "M", "ACC"]
        }
    }
}